---
- name: Set create_ansible_user
  ansible.builtin.set_fact:
    create_ansible_user: "{{ ansible_user_to_create if (ansible_user_to_create is defined and ansible_user_to_create is not none) else ansible_user }}"
  register: ansible_user_test

- name: Set username and password
  ansible.builtin.set_fact:
    ansible_user: "{{ created_username }}"
    ansible_ssh_pass: "{{ created_password }}"
    ansible_become_pass: "{{ created_password }}"
  register: credentials

- name: Test host connection
  ansible.builtin.ping:
  no_log: true
  register: reachable
  when: credentials is succeeded

- name: Add user - {{ create_ansible_user }}
  become: true
  ansible.builtin.user:
    name: "{{ create_ansible_user }}"
  when: reachable is reachable
  register: user_add

- name: Set exclusive authorized key for the following user by copying it from current user - {{ create_ansible_user }}
  become: true
  ansible.posix.authorized_key:
    user: "{{ create_ansible_user }}"
    state: present
    key: "{{ lookup('file', public_key | default(lookup('env', 'HOME') + '/.ssh/id_rsa.pub')) }}"
    exclusive: true
  when: user_add is succeeded

- name: Disable password authentication for user - {{ create_ansible_user }}
  become: true
  ansible.builtin.blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} managed by Ansible"
    block: |
      Match User {{ create_ansible_user }}
        PasswordAuthentication no

- name: Install pam_ssh_agent_auth
  become: true
  ansible.builtin.dnf:
    name: pam_ssh_agent_auth
    state: present

# https://linux.die.net/man/8/pam_ssh_agent_auth
# https://docs.ansible.com/ansible/latest/collections/community/general/pamd_module.html
- name: Configure pam.d to allow sudo from {{ create_ansible_user }}
  become: true
  community.general.pamd:
    name: sudo
    new_type: auth
    new_control: sufficient
    new_module_path: pam_ssh_agent_auth.so
    module_arguments: 'file=/home/{{ create_ansible_user }}/.ssh/authorized_keys'
    state: before
    type: auth
    control: include
    module_path: system-auth

- name: Allow the following user to sudo all commands - {{ create_ansible_user }}
  become: true
  community.general.sudoers:
    name: "{{ create_ansible_user }}"
    state: present
    user: ansible
    commands: ALL
    nopassword: true

- name: Ensure SSH_AUTH_SOCK is passed with sudo
  become: true
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/{{ create_ansible_user }}
    search_string: 'SSH_AUTH_SOCK'
    line: 'Defaults:{{ create_ansible_user }} env_keep+=SSH_AUTH_SOCK'

- name: Restart service sshd
  become: true
  ansible.builtin.service:
    name: sshd
    state: restarted
